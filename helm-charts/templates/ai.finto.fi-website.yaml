apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  http-context.conf: |-
    client_max_body_size 5M;

    log_format matomo '$http_x_forwarded_for - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent"';
    access_log /logs/nginx-access.log matomo;

    upstream annif-app {
        server annif-app:8000;
    }
  server-context.conf: |-
    location /v1/ {
        proxy_pass http://annif-app;
    }
    location ~ \/v1/projects\/([^/]*)\/analyze$ {
        proxy_pass http://annif-app/v1/projects/$1/suggest;
    }
    location ~ \/v1/projects\/([^/]*)\/learn$ {
        deny  all;
    }
---

apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: {{ .Values.instance }}-nginx
  ports:
  - port: 8080
---

kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  name: {{ .Values.instance }}-nginx
spec:
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: ImageStreamTag
        namespace: openshift
        name: 'nginx:{{ .Values.nginxVersion }}'
  source:
    type: Git
    git:
      uri: 'https://github.com/NatLibFi/Annif.git'
      ref: api-instances
    contextDir: {{ .Values.contextDir }}
  output:
    to:
      kind: ImageStreamTag
      name: '{{ .Values.instance }}-nginx:latest'
  triggers:
    {{ toYaml .Values.nginxBuildTriggers | nindent 4 }}
---

kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: {{ .Values.instance }}-nginx
  labels:
    app: {{ .Values.instance }}-nginx
spec:
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - {{ .Values.instance }}-nginx
        from:
          kind: ImageStreamTag
          name: '{{ .Values.instance }}-nginx:latest'
    - type: ConfigChange
  replicas: 1
  selector:
    app: {{ .Values.instance }}-nginx
    deploymentconfig: {{ .Values.instance }}-nginx
  template:
    metadata:
      labels:
        app: {{ .Values.instance }}-nginx
        deploymentconfig: {{ .Values.instance }}-nginx
    spec:
      containers:
        - name: {{ .Values.instance }}-nginx
          image: >-
            image-registry.openshift-image-registry.svc:5000/annif/{{ .Values.instance }}-nginx:latest
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /index.html
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          volumeMounts:
            - name: nginx-conf
              mountPath: /opt/app-root/etc/nginx.d/http-context.conf
              subPath: http-context.conf
            - name: nginx-conf
              mountPath: /opt/app-root/etc/nginx.default.d/server-context.conf
              subPath: server-context.conf
            - name: logs
              mountPath: /logs
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
        - name: logs
          persistentVolumeClaim:
            claimName: logs
            readOnly: False
---

apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: {{ .Values.instance }}-nginx
---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: annif
  labels:
    type: external
spec:
  host: {{ .Values.host}}
  port:
    targetPort: 8080
  to:
    kind: Service
    name: nginx
  wildcardPolicy: None
---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: logs
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 0.5Gi
