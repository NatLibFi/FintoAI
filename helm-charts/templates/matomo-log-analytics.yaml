apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: matomo-log-analytics
---

kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  annotations:
  name: matomo-log-analytics
  namespace: annif
  labels:
    app: matomo-log-analytics
spec:
  output:
    to:
      kind: ImageStreamTag
      name: 'matomo-log-analytics:latest'
  successfulBuildsHistoryLimit: 5
  failedBuildsHistoryLimit: 5
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: ImageStreamTag
        namespace: openshift
        name: 'python:3.8-ubi7'
  source:
    type: Git
    git:
      uri: 'https://github.com/NatLibFi/matomo-log-analytics'
  triggers:
    - type: GitHub
      github:
        secretReference:
          name: matomo-log-analytics-github-webhook-secret
    - type: ConfigChange
    - type: ImageChange
      imageChange: {}
  runPolicy: Serial
---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: matomo-log-analytics
  namespace: annif
  labels:
    app: matomo-log-analytics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: matomo-log-analytics
  template:
    metadata:
      labels:
        app: matomo-log-analytics
    spec:
      containers:
        - name: matomo-log-analytics
          image: >-
            image-registry.openshift-image-registry.svc:5000/annif/matomo-log-analytics:latest
          command: ["/bin/sh", "-c"]
          args:
            - tail -f /logs/nginx-access.log | python /opt/app-root/src/import_logs.py
              --url={{ .Values.matomoServerUrl }}
              --idsite={{ .Values.matomoSiteId}}
              --token-auth $(MATOMO-TOKEN)
              --enable-http-errors
              --enable-http-redirects
              --enable-static
              --enable-bots
              --track-http-method true
              --recorder-max-payload-size=10 -
          env:
            - name: MATOMO-TOKEN
              valueFrom:
                secretKeyRef:
                  name: matomo-token
                  key: matomo-token
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: logs
              mountPath: /logs
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: logs
            readOnly: True
      # Matomo script needs to be run on the same node as nginx:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ai-finto-fi-nginx
            topologyKey: kubernetes.io/hostname
---
