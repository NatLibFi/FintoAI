kind: DeploymentConfig  # TODO Switch to Deployment?
apiVersion: apps.openshift.io/v1
metadata:
  name: {{ .Values.instance }}-nginx
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/instance: {{ .Values.instance }}
    app.kubernetes.io/version: {{ .Values.nginx.version | quote }}
spec:
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - {{ .Values.instance }}-nginx
        from:
          kind: ImageStreamTag
          name: '{{ .Values.instance }}-nginx:latest'
    - type: ConfigChange
  replicas: 1
  selector:
    app.kubernetes.io/name: nginx
    deploymentconfig: {{ .Values.instance }}-nginx
  template:
    metadata:
      labels:
        deploymentconfig: {{ .Values.instance }}-nginx
        app.kubernetes.io/name: nginx
        app.kubernetes.io/instance: {{ .Values.instance }}
        app.kubernetes.io/version: {{ .Values.nginx.version | quote }}
    spec:
      containers:
        - name: {{ .Values.instance }}-nginx
          image: >-
            image-registry.openshift-image-registry.svc:5000/annif/{{ .Values.instance }}-nginx:latest
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /index.html
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          volumeMounts:
            - name: nginx-conf
              mountPath: /opt/app-root/etc/nginx.d/http-context.conf
              subPath: http-context.conf
            - name: nginx-conf
              mountPath: /opt/app-root/etc/nginx.default.d/server-context.conf
              subPath: server-context.conf
            - name: logs
              mountPath: /logs
          env:
            - name: TZ
              value: {{ .Values.timezone }}
      volumes:
        - name: nginx-conf
          configMap:
            name: {{ .Values.instance }}-nginx-conf
        - name: logs
          persistentVolumeClaim:
            claimName: {{ .Values.instance }}-logs
            readOnly: False
